"use strict";const gcZonesLocales={en:{options:{title:"Zones",date_format_hint:"YYYY-MM-DD"},zones:{settings:"Zones options",startdate:"Start date",enddate:"End date",getZones:"Get Zones",reset:"Reset",pixelsize:"Pixel size"}},de:{options:{title:"Zonen",date_format_hint:"JJJJ-MM-TT"},zones:{settings:"Zonen Einstellungen",startdate:"Anfangsdatum",enddate:"Enddatum",getZones:"Zonen",reset:"Zurücksetzen",pixelsize:"Pixelgröße"}}};Vue.component("gc-zones-control",{props:{gcWidgetId:{type:String,default:"zones1",required:!0},gcLayout:{type:String,default:"vertical"},gcAvailableOptions:{type:String,default:"widgetTitle"},gcWidgetCollapsed:{type:Boolean,default:!1},gcLanguage:{type:String,default:"en"},gcStartdate:{type:String,default:""},gcEnddate:{type:String,default:""}},template:'<div :id="this.gcWidgetId" class="">\n\n                <p :class="[\'gc-options-title\', \'is-size-6\', gcWidgetCollapsed ? \'is-grey\' : \'is-orange\']" \n                  style="cursor: pointer; margin-bottom: 0.5em;"    \n                  v-on:click="toggleZones" \n                  v-show="availableOptions.includes(\'widgetTitle\')"> \n                  {{ $t(\'options.title\')}}\n                  <i :class="[!gcWidgetCollapsed ? \'\': \'is-active\', \'fas\', \'fa-angle-down\', \'fa-sm\']"></i>\n                </p>\n\n                \x3c!-- zones container --\x3e\n                <div :class="[!gcWidgetCollapsed ? \'\': \'is-hidden\']" style="margin-bottom: 1em;">\n\n                  <div style="margin-top: 0.5em; margin-bottom: 0.5em;">\n                    <p :class="[\'is-6 \', !zonesSettings ? \'is-grey\' : \'is-orange\']" \n                    v-on:click="zonesSettings =! zonesSettings" style="cursor: pointer; margin-bottom: 0.5em!important;">\n                    {{ $t(\'zones.settings\') }} \n                    <i :class="[zonesSettings ? \'\': \'is-active\', \'fas\', \'fa-angle-down\', \'fa-sm\']"></i>\n                    </p>\n                  </div>\n\n                  \x3c!-- zones settings --\x3e\n                  <div :class="[zonesSettings ? \'\' : \'is-hidden\', layoutCSSMap[\'alignment\'][gcLayout]]">\n                    <div :class="[\'field\', \'gc-field-\'+gcLayout]">\n                      <label class="label is-grey is-small has-text-left"> {{ $t(\'zones.startdate\') }} </label>\n                      <div class="control">\n                        <input :id="\'inpstartdate_\'+ gcWidgetId" type="text" class="input is-small" v-bind:placeholder="\'[\' + $t(\'options.date_format_hint\') +\']\'" v-model="startDate">\n                      </div>\n                    </div>\n                    <div :class="[\'field\', \'gc-field-\'+gcLayout]">\n                      <label class="label is-grey is-small has-text-left"> {{ $t(\'zones.enddate\') }} </label>\n                      <div class="control">\n                        <input :id="\'inpenddate_\'+ gcWidgetId" type="text" class="input is-small" v-bind:placeholder="\'[\' + $t(\'options.date_format_hint\') +\']\'" v-model="endDate">\n                      </div>\n                    </div>\n\n                    <div :class="[\'field\', \'gc-field-\'+gcLayout]">\n                      <div class="is-small">\n                        <label class="label is-grey is-small has-text-left"> {{ $t(\'zones.pixelsize\') }}: {{pixelSize}}m </label>\n                        <input type="range" class="slider is-small is-orange" min="1" max="30" value="10" step="1" \n                            v-model="pixelSize">\n                        <button class="button is-small is-orange is-light" \n                          style="vertical-align: middle !important;" :title="$t(\'zones.reset\')" v-on:click="pixelSize=10;">\n                          <i class="fas fa-undo fa"></i>\n                        </button>\n                      </div>\n                    </div>\n\n                  </div> \x3c!-- zones settings --\x3e\n        \n                  \x3c!-- zones buttons --\x3e\n                  <div class="is-flex" style="padding-top: 0.5em;">\n                    <button class="button is-light is-orange gc-button-analytics" v-on:click="getZones()">\n                      <span class="content"><i class="fas fa-tractor fa-sm"></i> {{ $t(\'zones.getZones\')}} </span>\n                    </button>\n                  </div>\x3c!-- zones buttons --\x3e\n\n                </div>\x3c!-- zones container --\x3e\n\n            </div>\x3c!-- gcWidgetId --\x3e',data:function(){return console.debug("gc-zones - data()"),{zones:"",pixelSize:10,zonesSettings:!0,startdateCalendar:void 0,enddateCalendar:void 0,layoutCSSMap:{alignment:{vertical:"is-inline-block",horizontal:"is-flex"}}}},i18n:{locale:this.currentLanguage,messages:gcZonesLocales},created:function(){console.debug("gc-zones! - created()"),this.changeLanguage()},mounted:function(){console.debug("gc-zones! - mounted()");try{this.changeLanguage()}catch(ex){}this.startdateCalendar=new bulmaCalendar(document.getElementById("inpstartdate_"+this.gcWidgetId),{startDate:new Date,dateFormat:"yyyy-mm-dd",lang:this.gcLanguage,overlay:!1,closeOnOverlayClick:!0,closeOnSelect:!0,onSelect:function(e){var a=new Date(e.valueOf()+864e5);this.startDate=a.toISOString().split("T")[0]}.bind(this)}),this.enddateCalendar=new bulmaCalendar(document.getElementById("inpenddate_"+this.gcWidgetId),{startDate:new Date,dateFormat:"yyyy-mm-dd",lang:this.gcLanguage,overlay:!1,closeOnOverlayClick:!0,closeOnSelect:!0,onSelect:function(e){var a=new Date(e.valueOf()+864e5);this.endDate=a.toISOString().split("T")[0]}.bind(this)})},computed:{availableOptions:{get:function(){return this.gcAvailableOptions.split(",")}},currentLanguage:{get:function(){return this.gcLanguage}},startDate:{get:function(){return this.gcStartdate},set:function(value){this.$root.$emit("startdateChange",value)}},endDate:{get:function(){return this.gcEnddate},set:function(value){this.$root.$emit("enddateChange",value)}}},watch:{currentLanguage(newValue,oldValue){this.changeLanguage()},pixelSize(newValue,oldValue){this.$root.$emit("pixelsizeChange",newValue)}},methods:{toggleZones(){this.gcWidgetCollapsed=!this.gcWidgetCollapsed},changeLanguage(){this.$i18n.locale=this.currentLanguage},getZones(){console.debug("zones.getZones()"),this.$root.$emit("getZones")}}});